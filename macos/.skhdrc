# ================================Window settings================================
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east 

# Swap window position
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# Move window position
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# resize window
ctrl + alt + cmd - left : yabai -m window --resize left:-50:0; yabai -m window --resize right:-50:0
ctrl + alt + cmd - down : yabai -m window --resize bottom:0:50; yabai -m window --resize top:0:50
ctrl + alt + cmd - up : yabai -m window --resize top:0:-50; yabai -m window --resize bottom:0:-50
ctrl + alt + cmd - right : yabai -m window --resize right:50:0; yabai -m window --resize left:50:0

# restore original window size
ctrl + alt + cmd - 0 : yabai -m space --balance

# float / unfloat window and center on screen
ctrl + alt + cmd - t : yabai -m window --toggle float;yabai -m window --grid 4:4:1:1:2:2

# weird rotate..
alt - r         : yabai -m space --rotate 90

# toggle window split type
alt - e : yabai -m window --toggle split

# toggle window zoom
alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen

# Restart Yabai
ctrl + alt + cmd - r : /usr/bin/env osascript <<< "display notification \"Restarting Yabai\" with title \"Yabai\""; launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

# move floating window
shift + ctrl - a : yabai -m window --move rel:-20:0
shift + ctrl - s : yabai -m window --move rel:0:20
shift + ctrl - w : yabai -m window --move rel:0:-20
shift + ctrl - d : yabai -m window --move rel:20:0

# toggle sticky(+float), topmost, picture-in-picture
# alt - p : yabai -m window --toggle sticky;\
#           yabai -m window --toggle topmost;\
#           yabai -m window --toggle pip





# Close active application
ctrl + cmd - backspace : yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close
ctrl + cmd - h : yabai -m window $(yabai -m query --windows --window | jq -re ".id") --minimize


# ================================Virtual Desktop Configuration================================
# Create a new desktop, send the currently active window to the new desktop, and automatically jump to the new desktop. jq needs to support brew install jq
shift + cmd - n : yabai -m space --create && index="$(yabai -m query --spaces --display | jq '.| length')" && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# Switch back to the nearest desktop
# alt - x : yabai -m space --focus recent
# Switch back to the first desktop
ctrl - 1 : yabai -m space --focus 1
ctrl - 2 : yabai -m space --focus 2
ctrl - 3 : yabai -m space --focus 3
ctrl - 4 : yabai -m space --focus 4
ctrl - 5 : yabai -m space --focus 5
ctrl - 6 : yabai -m space --focus 6
ctrl - 7 : yabai -m space --focus 7
ctrl - 8 : yabai -m space --focus 8
ctrl - 9 : yabai -m space --focus 9

# Close the current desktop
ctrl + alt + cmd - delete : yabai -m space --destroy


# send window to desktop 
shift + alt + cmd - z : yabai -m window --space next
shift + alt + cmd - 1 : yabai -m window --space  1
shift + alt + cmd - 2 : yabai -m window --space  2
shift + alt + cmd - 3 : yabai -m window --space  3
shift + alt + cmd - 4 : yabai -m window --space  4
shift + alt + cmd - 5 : yabai -m window --space  5
shift + alt + cmd - 6 : yabai -m window --space  6
shift + alt + cmd - 7 : yabai -m window --space  7
shift + alt + cmd - 8 : yabai -m window --space  8
shift + alt + cmd - 9 : yabai -m window --space  9


# send window to desktop AND follow focus
shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
shift + cmd - 1 : yabai -m window --space  1; yabai -m space --focus 1
shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2
shift + cmd - 3 : yabai -m window --space  3; yabai -m space --focus 3
shift + cmd - 4 : yabai -m window --space  4; yabai -m space --focus 4
shift + cmd - 5 : yabai -m window --space  5; yabai -m space --focus 5
shift + cmd - 6 : yabai -m window --space  6; yabai -m space --focus 6
shift + cmd - 7 : yabai -m window --space  7; yabai -m space --focus 7
shift + cmd - 8 : yabai -m window --space  8; yabai -m space --focus 8
shift + cmd - 9 : yabai -m window --space  9; yabai -m space --focus 9

# ================================ APPS ================================
# iTerm2
#cmd - return : open -a iTerm

# ========================= Focus app to current window ================================
# c -> google chrome
ctrl + alt + cmd - c : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Google Chrome" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# v -> vscode
ctrl + alt + cmd - v : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Code" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# o -> obsidian
ctrl + alt + cmd - o : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Obsidian" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# p -> personal google chrome
ctrl + alt + cmd - p : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Google Chrome Canary" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# g -> gather
ctrl + alt + cmd - g : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Gather" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"

# s -> slack
ctrl + alt + cmd - s : index="$(yabai -m query --spaces --display | jq -r '.[] | select(."is-visible") | .index')" && yabai -m window --focus $(yabai -m query --windows | jq -r '.[] | select(.app=="Slack" ) | .id') && yabai -m window --space "${index}" && yabai -m space --focus "${index}"



## Create a new desktop, send the currently active window to the new desktop, and automatically jump to the new desktop. jq needs to support brew install jq
# shift + cmd - n : yabai -m space --create && index="$(yabai -m query --spaces --display | jq '.| length')" && yabai -m window --space "${index}" && yabai -m space --focus "${index}"



# ================================Multi display configuration================================
# focus monitor 
ctrl + alt - z  : yabai -m display --focus prev
ctrl + alt - 1 : yabai -m display --focus 1
ctrl + alt - 2 : yabai -m display --focus 2
ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# TODO: I think these are broken right now..
ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1
ctrl + cmd - 2  : yabai -m window --display 1; yabai -m display --focus 2
ctrl + cmd - 3  : yabai -m window --display 1; yabai -m display --focus 3

# set insertion point in focused container
# TODO: Figure out what a 'insertion point' is..
# ctrl + alt - h : yabai -m window --insert west

##ctrl + alt + cmd - p : /Users/jon/.config/yabairc/move-all-the-things.sh



## Trying to do some things with topmost for toggling popups..
ctrl + cmd - t : yabai -m window --toggle topmost; yabai -m window --toggle zoom-fullscreen; yabai -m window --toggle topmost
ctrl + alt + cmd - z : yabai -m window --toggle topmoost
